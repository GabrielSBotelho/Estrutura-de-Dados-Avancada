a)
    void delete(A[], int i){
        A[1] = A[i];
        i -= 1;
        int n = 1;

        enquanto n menor que i{
            int left  = A[2*n];
            int right = A[2*n + 1];
            se left maior que right{
                int larger = 2 * n;
            }se não{
                int larger = 2 * n + 1;
            }

            se A[n] < A[larger]{
                swap(A, n, larger);
                n = larger;
            }se não{
                return;
            }
        }
    }

b) Como não vai precisar passar por todos os campos do heap, mesmo que o seu tamanho seja muito grande,
não será necessário percorrer todo o heap, graças a divisão e conquista. Desta forma, no pior caso vai 
se manter O(log n).